/*
 * stm32f407xx_spi.h
 *
 *  Created on: Apr 10, 2025
 *      Author: nhduong
 */

#ifndef INC_STM32F407XX_SPI_H_
#define INC_STM32F407XX_SPI_H_

#include "stm32f407xx.h"

/*
 * @brief SPI Configuration Structure
 */
typedef struct
{
	uint8_t Mode;				/*!< Specifies the SPI operating mode.
									This parameter can be a value of @ref SPI_Mode						*/

	uint8_t Direction;			/*!< Specifies the SPI bidirection mode state.
								 	 This parameter can be a value of @ref SPI_Direction				*/

	uint8_t DataSize;			/*!< Specifies the SPI data size.
								 	 This paramter can be a value of @ref SPI_Data_Size					*/

	uint8_t CLKPolarity;		/*!< Specifies the serial clock steady state.
								 	 This parameter can be a value of @ref SPI_Clock_Polarity			*/

	uint8_t CLKPhase;			/*!< Specifies the clock active edge for the bit capture.
								 	 This parameter can be a value @ref SPI_Clock_Phase					*/

	uint8_t NSS;				/*!< Specifies whether the NSS signal is managed by
								 	 hardware (NSS pin) or by software using the SSI bit.
								 	 This parameter can be a value of @ref SPI_Slave_Select_management	*/

	uint8_t BaudRatePrescaler;	/*!< Specifies the Baud Rate prescaler value which will be
									 used to configure the transmit and receive SCK clock.
									 This parameter can be a value of @ref SPI_BaudRate_Prescaler		*/

}SPI_InitTypeDef;

/*
 * @brief SPI State struct definition
 */
typedef enum
{
	SPI_STATE_READ = 0x00;
}SPI_StateTypeDef;











#endif /* INC_STM32F407XX_SPI_H_ */
